[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};


[ClassVersion("1.0.0.0"), FriendlyName("IntuneDiskEncryptionPDEPolicyWindows10")]
class MSFT_IntuneDiskEncryptionPDEPolicyWindows10 : OMI_BaseResource
{
    [Write, Description("Policy description")] String Description;
    [Key, Description("Policy name")] String DisplayName;
    [Write, Description("List of Scope Tags for this Entity instance.")] String RoleScopeTagIds[];
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("Enable Personal Data Encryption (User) (0: Disable Personal Data Encryption., 1: Enable Personal Data Encryption.)"), ValueMap{"0", "1"}, Values{"0", "1"}] String EnablePersonalDataEncryption;
    [Write, Description("Protect Desktop (User) (Windows Insiders only) - Depends on EnablePersonalDataEncryption (0: Disable PDE on the folder. If the folder is currently protected by PDE, this will result in unprotecting the folder., 1: Enable PDE on the folder.)"), ValueMap{"0", "1"}, Values{"0", "1"}] String ProtectDesktop;
    [Write, Description("Protect Pictures (User) (Windows Insiders only) - Depends on EnablePersonalDataEncryption (0: Disable PDE on the folder. If the folder is currently protected by PDE, this will result in unprotecting the folder., 1: Enable PDE on the folder.)"), ValueMap{"0", "1"}, Values{"0", "1"}] String ProtectPictures;
    [Write, Description("Protect Documents (User) (Windows Insiders only) - Depends on EnablePersonalDataEncryption (0: Disable PDE on the folder. If the folder is currently protected by PDE, this will result in unprotecting the folder., 1: Enable PDE on the folder.)"), ValueMap{"0", "1"}, Values{"0", "1"}] String ProtectDocuments;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
