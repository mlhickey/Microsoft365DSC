[ClassVersion("1.0.0")]
class MSFT_AADHomeRealDiscoveryPolicyDefinition
{
	[Write, Description("Accelerate to Federated Domain.")] Boolean AccelerateToFederatedDomain;
	[Write, Description("Allow cloud password validation.")] Boolean AllowCloudPasswordValidation;
	[Write, Description("AlternateIdLogin complex object."), EmbeddedInstance("MSFT_AADHomeRealDiscoveryPolicyDefinitionAlternateIdLogin")] String AlternateIdLogin;
	[Write, Description("Preffered Domain value.")] String PreferredDomain;
};

[ClassVersion("1.0.0")]
class MSFT_AADHomeRealDiscoveryPolicyDefinitionAlternateIdLogin
{
	[Write, Description("Boolean for whether AlternateIdLogin is enabled.")] Boolean Enabled;
};

[ClassVersion("1.0.0.0"), FriendlyName("AADHomeRealmDiscoveryPolicy")]
class MSFT_AADHomeRealmDiscoveryPolicy : OMI_BaseResource
{
    [Key, Description("Display name for this policy. Required.")] String DisplayName;
    [Write, Description("A string collection containing a complex object array that defines the rules and settings for a policy. The syntax for the definition differs for each derived policy type. Required."), EmbeddedInstance("MSFT_AADHomeRealDiscoveryPolicyDefinition")] String Definition[];
    [Write, Description("If set to true, activates this policy. There can be many policies for the same policy type, but only one can be activated as the organization default. Optional, default value is false.")] Boolean IsOrganizationDefault;
    [Write, Description("Description for this policy. Required.")] String Description;

    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};

